@import "tailwindcss";

@import "tw-animate-css";

@source '../../vendor/laravel/framework/src/Illuminate/Pagination/resources/views/*.blade.php';
@source '../../storage/framework/views/*.php';

@custom-variant dark (&:is(.dark *));

@theme inline {
  --font-sans: Instrument Sans, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);

  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --color-sidebar: var(--sidebar-background);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-ring: var(--sidebar-ring);
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body,
  html {
    --font-sans: "Instrument Sans", ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  }
}

:root {
  --background: hsl(0 0% 100%);
  --foreground: hsl(0 0% 3.9%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(0 0% 3.9%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(0 0% 3.9%);
  --primary: hsl(0 0% 9%);
  --primary-foreground: hsl(0 0% 98%);
  --secondary: hsl(0 0% 92.1%);
  --secondary-foreground: hsl(0 0% 9%);
  --muted: hsl(0 0% 96.1%);
  --muted-foreground: hsl(0 0% 45.1%);
  --accent: hsl(0 0% 96.1%);
  --accent-foreground: hsl(0 0% 9%);
  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 92.8%);
  --input: hsl(0 0% 89.8%);
  --ring: hsl(0 0% 3.9%);
  --chart-1: hsl(12 76% 61%);
  --chart-2: hsl(173 58% 39%);
  --chart-3: hsl(197 37% 24%);
  --chart-4: hsl(43 74% 66%);
  --chart-5: hsl(27 87% 67%);
  --radius: 0.5rem;
  --sidebar-background: hsl(0 0% 98%);
  --sidebar-foreground: hsl(240 5.3% 26.1%);
  --sidebar-primary: hsl(0 0% 10%);
  --sidebar-primary-foreground: hsl(0 0% 98%);
  --sidebar-accent: hsl(0 0% 94%);
  --sidebar-accent-foreground: hsl(0 0% 30%);
  --sidebar-border: hsl(0 0% 91%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
  --sidebar: hsl(0 0% 98%);
}

.dark {
  --background: hsl(0 0% 3.9%);
  --foreground: hsl(0 0% 98%);
  --card: hsl(0 0% 3.9%);
  --card-foreground: hsl(0 0% 98%);
  --popover: hsl(0 0% 3.9%);
  --popover-foreground: hsl(0 0% 98%);
  --primary: hsl(0 0% 98%);
  --primary-foreground: hsl(0 0% 9%);
  --secondary: hsl(0 0% 14.9%);
  --secondary-foreground: hsl(0 0% 98%);
  --muted: hsl(0 0% 16.08%);
  --muted-foreground: hsl(0 0% 63.9%);
  --accent: hsl(0 0% 14.9%);
  --accent-foreground: hsl(0 0% 98%);
  --destructive: hsl(0 84% 60%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 14.9%);
  --input: hsl(0 0% 14.9%);
  --ring: hsl(0 0% 83.1%);
  --chart-1: hsl(220 70% 50%);
  --chart-2: hsl(160 60% 45%);
  --chart-3: hsl(30 80% 55%);
  --chart-4: hsl(280 65% 60%);
  --chart-5: hsl(340 75% 55%);
  --sidebar-background: hsl(0 0% 7%);
  --sidebar-foreground: hsl(0 0% 95.9%);
  --sidebar-primary: hsl(360, 100%, 100%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(0 0% 15.9%);
  --sidebar-accent-foreground: hsl(240 4.8% 95.9%);
  --sidebar-border: hsl(0 0% 15.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
  --sidebar: hsl(240 5.9% 10%);
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* Floating label (CSS-only) */
@layer base {
  .input-label {
    /* density-controlled float offset (overridden inline via --label-float-top) */
    --label-float-top: 0.5rem; /* default for 56/48px fields */
    color: var(--muted-foreground); /* REST state: muted */
    position: absolute;
    left: 0; /* aligns with text start; container has px-4 */
    top: 50%;
    transform: translateY(-50%);
    transform-origin: left;
    font-weight: 600;
    transition: all 0.2s;
    pointer-events: none;
  }

  .peer:focus ~ .input-label,
  .peer:not(:placeholder-shown) ~ .input-label,
  .peer:-webkit-autofill ~ .input-label {
    top: var(--label-float-top);
    transform: translateY(0);
    font-size: 0.75rem; /* text-xs */
    color: var(--foreground); /* ACTIVE/FLOAT color */
  }
}

/* Autofill paint that respects base tokens */
@layer utilities {
  .autofill\:surface:-webkit-autofill {
    -webkit-box-shadow: 0 0 0 1000px var(--secondary) inset;
    -webkit-text-fill-color: var(--foreground);
    caret-color: var(--ring);
  }
}

/* Filled & outlined container styles (no new tokens) */
@layer utilities {
  /* Outlined */
  .field-outlined {
    background-color: transparent;
    border: 1px solid var(--border);
    transition:
      box-shadow 0.2s,
      border-color 0.2s,
      background-color 0.2s;
  }
  .field-outlined:hover {
    border-color: color-mix(in srgb, var(--ring) 30%, var(--border));
  }
  .field-outlined:focus-within {
    border-color: var(--ring);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--ring) 25%, transparent);
  }

  /* Filled */
  .field-filled {
    /* a gentle surface using only base vars */
    background-color: color-mix(in srgb, var(--secondary) 95%, var(--background));
    border-bottom: 1px solid var(--border);
    transition:
      box-shadow 0.2s,
      border-color 0.2s,
      background-color 0.2s;
  }
  .field-filled:hover {
    background-color: color-mix(in srgb, var(--secondary) 90%, var(--background));
  }
  .field-filled:focus-within {
    border-bottom-color: var(--ring);
    box-shadow: 0 0 0 1px color-mix(in srgb, var(--ring) 20%, transparent);
  }

  /* Invalid state driven by base tokens */
  .is-invalid {
    --_invalid-color: var(--destructive);
  }
  .is-invalid.field-outlined {
    border-color: var(--_invalid-color);
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--_invalid-color) 25%, transparent);
  }
  .is-invalid.field-filled {
    border-bottom-color: var(--_invalid-color);
    box-shadow: 0 0 0 1px color-mix(in srgb, var(--_invalid-color) 20%, transparent);
  }
  .is-invalid .input-label {
    color: var(--_invalid-color);
  }
}

/* Optional: keyboard focus hint (global) */
@layer base {
  :focus-visible {
    outline: 2px solid color-mix(in srgb, var(--ring) 60%, transparent);
    outline-offset: 2px;
  }
}
